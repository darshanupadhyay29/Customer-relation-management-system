{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\Main-panel-main\\\\panel-main-main\\\\frontend\\\\src\\\\ShippingInfo\\\\ConfirmedOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmedOrders = () => {\n  _s();\n  const [confirmed, setConfirmed] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"/confirmed\");\n        const {\n          count\n        } = response.data; // Adjust to match the response structure\n        setConfirmed(count); // Set the state with the count value\n        console.log(count); // Log the count value\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", confirmed]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(ConfirmedOrders, \"++cf/K/taMwPNZ4mooMdGjG4PQE=\");\n_c = ConfirmedOrders;\nexport default ConfirmedOrders;\nvar _c;\n$RefreshReg$(_c, \"ConfirmedOrders\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ConfirmedOrders","_s","confirmed","setConfirmed","fetchData","token","localStorage","getItem","response","get","count","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/Main-panel-main/panel-main-main/frontend/src/ShippingInfo/ConfirmedOrders.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ConfirmedOrders = () => {\r\n  const [confirmed, setConfirmed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            \r\n            \r\n            const response = await axios.get(\"/confirmed\");\r\n            \r\n            \r\n        const { count } = response.data; // Adjust to match the response structure\r\n        setConfirmed(count); // Set the state with the count value\r\n        console.log(count); // Log the count value\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return <div> {confirmed}</div>;\r\n};\r\n\r\nexport default ConfirmedOrders;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAG3C,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,YAAY,CAAC;QAGlD,MAAM;UAAEC;QAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACjCR,YAAY,CAACO,KAAK,CAAC,CAAC,CAAC;QACrBE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MACpB;IACF,CAAC;IAEDV,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOL,OAAA;IAAAgB,QAAA,GAAK,GAAC,EAACb,SAAS;EAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAChC,CAAC;AAAClB,EAAA,CAxBID,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AA0BrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}