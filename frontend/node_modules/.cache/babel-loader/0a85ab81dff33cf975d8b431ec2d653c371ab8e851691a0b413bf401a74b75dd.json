{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\Main-panel-main\\\\panel-main-main\\\\frontend\\\\src\\\\DashboardInfo\\\\DashboardTableData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardTableData = () => {\n  _s();\n  const [dashboardData, setDashboardData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:3000/dashboardData\");\n        const {\n          data\n        } = response; // Correctly set data to response.data\n\n        setDashboardData(data); // Update state with the actual data\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dashboardData.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.productName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(DashboardTableData, \"BO+FvyMF1N2LSfnTEdtJ21aqBCw=\");\n_c = DashboardTableData;\nexport default DashboardTableData;\nvar _c;\n$RefreshReg$(_c, \"DashboardTableData\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardTableData","_s","dashboardData","setDashboardData","fetchData","response","get","data","error","console","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","productName","city","address","phone","email","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/Main-panel-main/panel-main-main/frontend/src/DashboardInfo/DashboardTableData.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst DashboardTableData = () => {\r\n  const [dashboardData, setDashboardData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://127.0.0.1:3000/dashboardData\");\r\n            const { data } = response; // Correctly set data to response.data\r\n       \r\n          setDashboardData(data); // Update state with the actual data\r\n          \r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {dashboardData.map((data) => (\r\n        <tr>\r\n          <td>{data.name}</td>\r\n          <td>{data.productName}</td>\r\n          <td>{data.city}</td>\r\n          <td>{data.address}</td>\r\n          <td>{data.phone}</td>\r\n          <td>{data.email}</td>\r\n        </tr>\r\n      ))}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default DashboardTableData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,qCAAqC,CAAC;QACvE,MAAM;UAAEC;QAAK,CAAC,GAAGF,QAAQ,CAAC,CAAC;;QAE7BF,gBAAgB,CAACI,IAAI,CAAC,CAAC,CAAC;MAE5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAAAE,SAAA;IAAAW,QAAA,EACGR,aAAa,CAACS,GAAG,CAAEJ,IAAI,iBACtBV,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKH,IAAI,CAACK;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBnB,OAAA;QAAAa,QAAA,EAAKH,IAAI,CAACU;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3BnB,OAAA;QAAAa,QAAA,EAAKH,IAAI,CAACW;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBnB,OAAA;QAAAa,QAAA,EAAKH,IAAI,CAACY;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBnB,OAAA;QAAAa,QAAA,EAAKH,IAAI,CAACa;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBnB,OAAA;QAAAa,QAAA,EAAKH,IAAI,CAACc;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACL;EAAC,gBACF,CAAC;AAEP,CAAC;AAACf,EAAA,CAjCID,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AAmCxB,eAAeA,kBAAkB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}