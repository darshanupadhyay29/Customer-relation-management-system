{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\Main-panel-main\\\\panel-main-main\\\\frontend\\\\src\\\\CustomerInfo\\\\customerTableData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerTableData = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [editingCustomerId, setEditingCustomerId] = useState(null);\n  useEffect(() => {\n    // Fetch data from the backend\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:3000/home/customers\");\n        // Destructure the response data\n        const {\n          data\n        } = response;\n        // Update the state with the fetched data\n        setCustomers(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleDelete = async customerid => {\n    try {\n      // Send a delete request to the backend to delete the customer with the given ID\n      await axios.delete(`http://127.0.0.1:3000/home/customersdata/${customerid}`);\n\n      // Remove the deleted customer from the state\n      setCustomers(customers.filter(customer => customer._id !== String(customerid)));\n    } catch (error) {\n      console.error(\"Error deleting customer:\", error);\n    }\n  };\n  const handleEditClick = customerId => {\n    setEditingCustomerId(customerId);\n  };\n  const handleSaveClick = () => {\n    // Implement logic to save edited customer data\n    setEditingCustomerId(null); // Reset editing state after saving\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: customers.map(customer => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: customer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: customer.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: customer.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: customer.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: customer._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete\",\n        className: \"cnclBtn\",\n        onClick: () => handleDelete(customer._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), editingCustomerId === customer._id ? /*#__PURE__*/_jsxDEV(EditData, {\n        customer: customer,\n        onSave: handleSaveClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Edit\",\n        className: \"editBtn\",\n        onClick: () => handleEditClick(customer._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, customer._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(CustomerTableData, \"8TsT5MYZgpBKIDMw5GTlPFl/BqI=\");\n_c = CustomerTableData;\nconst EditData = ({\n  customer,\n  onSave\n}) => {\n  // Add your edit fields here and implement logic to handle editing\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      \"& .MuiTextField-root\": {\n        m: 1,\n        width: \"25ch\"\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        label: \"Name\",\n        defaultValue: customer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Save\",\n      className: \"saveBtn\",\n      onClick: onSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c2 = EditData;\nexport default CustomerTableData;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomerTableData\");\n$RefreshReg$(_c2, \"EditData\");","map":{"version":3,"names":["React","useEffect","useState","axios","Box","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerTableData","_s","customers","setCustomers","editingCustomerId","setEditingCustomerId","fetchData","response","get","data","error","console","handleDelete","customerid","delete","filter","customer","_id","String","handleEditClick","customerId","handleSaveClick","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","city","phone","email","type","value","className","onClick","EditData","onSave","_c","component","sx","m","width","noValidate","autoComplete","id","label","defaultValue","_c2","$RefreshReg$"],"sources":["C:/Users/user/Downloads/Main-panel-main/panel-main-main/frontend/src/CustomerInfo/customerTableData.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\n\nconst CustomerTableData = () => {\n  const [customers, setCustomers] = useState([]);\n  const [editingCustomerId, setEditingCustomerId] = useState(null);\n\n  useEffect(() => {\n    // Fetch data from the backend\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          \"http://127.0.0.1:3000/home/customers\"\n        );\n        // Destructure the response data\n        const { data } = response;\n        // Update the state with the fetched data\n        setCustomers(data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleDelete = async (customerid) => {\n    try {\n      // Send a delete request to the backend to delete the customer with the given ID\n      await axios.delete(\n        `http://127.0.0.1:3000/home/customersdata/${customerid}`\n      );\n\n      // Remove the deleted customer from the state\n      setCustomers(\n        customers.filter((customer) => customer._id !== String(customerid))\n      );\n    } catch (error) {\n      console.error(\"Error deleting customer:\", error);\n    }\n  };\n\n  const handleEditClick = (customerId) => {\n    setEditingCustomerId(customerId);\n  };\n\n  const handleSaveClick = () => {\n    // Implement logic to save edited customer data\n    setEditingCustomerId(null); // Reset editing state after saving\n  };\n\n  return (\n    <>\n      {customers.map((customer) => (\n        <tr key={customer._id}>\n          <td>{customer.name}</td>\n          <td>{customer.city}</td>\n          <td>{customer.phone}</td>\n          <td>{customer.email}</td>\n          <td>{customer._id}</td>\n          <input\n            type=\"button\"\n            value=\"Delete\"\n            className=\"cnclBtn\"\n            onClick={() => handleDelete(customer._id)}\n          />\n          {editingCustomerId === customer._id ? (\n            <EditData customer={customer} onSave={handleSaveClick} />\n          ) : (\n            <input\n              type=\"button\"\n              value=\"Edit\"\n              className=\"editBtn\"\n              onClick={() => handleEditClick(customer._id)}\n            />\n          )}\n        </tr>\n      ))}\n    </>\n  );\n};\n\nconst EditData = ({ customer, onSave }) => {\n  // Add your edit fields here and implement logic to handle editing\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      {/* Edit fields */}\n      <div>\n        <TextField id=\"name\" label=\"Name\" defaultValue={customer.name} />\n        {/* Add other edit fields */}\n      </div>\n      {/* Save button */}\n      <input type=\"button\" value=\"Save\" className=\"saveBtn\" onClick={onSave} />\n    </Box>\n  );\n};\n\nexport default CustomerTableData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}